services:
  # Infrastructure Services
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_USER: best_lap
      POSTGRES_PASSWORD: best_lap
      POSTGRES_DB: best_lap_db
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - best-lap-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U best_lap -d best_lap_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Resource limits (using compose v3 format)
    mem_limit: 512m
    memswap_limit: 512m
    cpus: 0.4

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - best-lap-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Resource limits (using compose v3 format)
    mem_limit: 128m
    memswap_limit: 128m
    cpus: 0.2

  # Application Services
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    image: best-lap-api:latest
    container_name: best-lap-api
    environment:
      - NODE_ENV=production
      - API_PORT=3333
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USER=best_lap
      - DB_PASSWORD=best_lap
      - DB_NAME=best_lap_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - FORCE_HTTP_SWAGGER=${FORCE_HTTP_SWAGGER:-false}
    ports:
      - "3333:3333"
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - best-lap-network
    # Resource limits (using compose v3 format)
    mem_limit: 512m
    memswap_limit: 512m
    cpus: 1.0

  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
    image: best-lap-admin:latest
    container_name: best-lap-admin
    environment:
      - NODE_ENV=production
      - BULL_BOARD_PORT=4000
      - BULL_BOARD_URL=http://localhost:4000
      - ADMIN_TOKEN=${ADMIN_TOKEN:-123456}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "4000:4000"
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - best-lap-network
    # Resource limits (using compose v3 format)
    mem_limit: 256m
    memswap_limit: 256m
    cpus: 0.2

  metrics-collector:
    build:
      context: .
      dockerfile: apps/metrics-collector/Dockerfile
    image: best-lap-metrics-collector:latest
    container_name: best-lap-metrics-collector
    environment:
      - NODE_ENV=production
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_USER=best_lap
      - DB_PASSWORD=best_lap
      - DB_NAME=best_lap_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - COLLECT_METRICS_CRON_EXPRESSION=${COLLECT_METRICS_CRON_EXPRESSION:-0 8,14,20 * * *}
      - WORKER_CONCURRENCY=${WORKER_CONCURRENCY:-10}
      - SEED_THEMES_URL=${SEED_THEMES_URL}
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - best-lap-network
    # Security options for Chrome
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
    # Resource limits (using compose v3 format)
    mem_limit: 512m
    memswap_limit: 512m
    cpus: 0.4

networks:
  best-lap-network:
    driver: bridge

volumes:
  timescaledb_data:
  redis_data:
